name: Deploy CDK Stacks

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  checks:
    name: üîç Run Lint, Typecheck & Dry Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck # Make sure this script exists in package.json

      - name: Lint code
        run: npm run lint

      - name: Ensure Docker is available
        run: docker --version

      - name: CDK Synth
        run: npm run cdk:synth:ci

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Simulated CDK Deploy (Dry Run)
        run: |
          npm run cdk:deploy:ci -- --no-execute

  deploy:
    name: üöÄ Deploy CDK Stacks to AWS
    runs-on: ubuntu-latest
    needs: checks

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: CDK Deploy
        run: |
          npm run cdk:deploy:ci
